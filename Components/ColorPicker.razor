@using MudBlazor.Utilities

<MudColorPicker @bind-Value="Color" ShowAlpha="false" Label="@Label" Disabled="@Disabled"/>

@code {
    private MudColor _color = MudColor.Parse("#594ae2");

    [Parameter] public required string Label { get; set; }
    [Parameter] public required string Value { get; set; }
    [Parameter] public EventCallback<string> ValueChanged { get; set; }
    [Parameter] public bool Disabled { get; set; }

    private MudColor Color
    {
        get => _color;
        set
        {
            _color = value;
            var newValue = _color.ToString(MudColorOutputFormats.Hex)[1..]; // Remove the '#' character
            ValueChanged.InvokeAsync(newValue);
        }
    }
    
    protected override void OnInitialized()
    {
        if (string.IsNullOrEmpty(Value))
        {
            Value = "594ae2"; // Default color
        }
        
        Color = MudColor.Parse($"#" + Value);
    }
    
    protected override void OnParametersSet()
    {
        if (MudColor.TryParse("#" + Value, out var parsedColor))
        {
            _color = parsedColor;
        }
    }
}