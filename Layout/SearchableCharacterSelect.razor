@using LTSaveEd.Models

<MudAutocomplete T="ValueDisplayPair" Label="Character" @bind-Value="@CurrentValue" SearchFunc="@Search"
                 CoerceText="true" Strict="false" MaxItems="null"/>

@code{
    private ValueDisplayPair _currentValue = null!;
    [Parameter] public required IEnumerable<ValueDisplayPair> Values { get; set; }
    [Parameter] public required ValueDisplayPair CharacterId { get; set; }
    [Parameter] public EventCallback<ValueDisplayPair> CharacterIdChanged { get; set; }
    
    private ValueDisplayPair CurrentValue
    {
        get => _currentValue;
        set
        {
            _currentValue = value;
            CharacterIdChanged.InvokeAsync(value);
        }
    }
    
    protected override void OnInitialized()
    {
        _currentValue = CharacterId;
    }
    
    private Task<IEnumerable<ValueDisplayPair>> Search(string value)
    {
        if (string.IsNullOrEmpty(value))
        {
            return Task.FromResult(Values);
        }

        return Task.FromResult(Values.Where(x => x.DisplayValue.Contains(value, StringComparison.InvariantCultureIgnoreCase)));
    }
}